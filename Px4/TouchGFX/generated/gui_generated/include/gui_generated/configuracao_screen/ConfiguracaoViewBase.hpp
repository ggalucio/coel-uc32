/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CONFIGURACAOVIEWBASE_HPP
#define CONFIGURACAOVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/configuracao_screen/ConfiguracaoPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <gui/containers/numKeyboardContainer.hpp>
#include <gui/containers/Background.hpp>

class ConfiguracaoViewBase : public touchgfx::View<ConfiguracaoPresenter>
{
public:
    ConfiguracaoViewBase();
    virtual ~ConfiguracaoViewBase() {}
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void tearDownScreen();
    virtual void afterTransition();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box boxFundo;
    touchgfx::Box boxAzul4;
    touchgfx::Box boxAzul3;
    touchgfx::Box boxAzul2;
    touchgfx::Box boxAzul;
    touchgfx::TextArea textAreaLabel1;
    touchgfx::TextArea textAreaLabel2;
    touchgfx::TextArea textAreaLabel3;
    touchgfx::TextArea textAreaLabel4;
    touchgfx::TextArea textAreaLabel5;
    touchgfx::Button buttonTelaInicial;
    touchgfx::Button buttonConfiguracao2;
    touchgfx::Button buttonResetFabrica;
    touchgfx::TextAreaWithOneWildcard textAreaDiferencialCongelarTempo;
    touchgfx::TextAreaWithOneWildcard textAreaSpCongelarTempo;
    touchgfx::TextAreaWithOneWildcard textAreaSpSondaCongelarCamara;
    touchgfx::TextAreaWithOneWildcard textAreaCongelarSondaSp;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButtonDiferencialCongelarTempo;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButtonSpCongelarTempo;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButtonSpSondaCongelarCamara;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButtonCongelarSondaSp;
    numKeyboardContainer numKeyboardContainer1;
    Background background1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREADIFERENCIALCONGELARTEMPO_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaDiferencialCongelarTempoBuffer[TEXTAREADIFERENCIALCONGELARTEMPO_SIZE];
    static const uint16_t TEXTAREASPCONGELARTEMPO_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaSpCongelarTempoBuffer[TEXTAREASPCONGELARTEMPO_SIZE];
    static const uint16_t TEXTAREASPSONDACONGELARCAMARA_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaSpSondaCongelarCamaraBuffer[TEXTAREASPSONDACONGELARCAMARA_SIZE];
    static const uint16_t TEXTAREACONGELARSONDASP_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaCongelarSondaSpBuffer[TEXTAREACONGELARSONDASP_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ConfiguracaoViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<ConfiguracaoViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<ConfiguracaoViewBase> numKeyboardContainer1OutOfRangeCallback;
    touchgfx::Callback<ConfiguracaoViewBase> numKeyboardContainer1ValidRangeCallback;
    touchgfx::Callback<ConfiguracaoViewBase> numKeyboardContainer1HideKeypadTriggerCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void numKeyboardContainer1OutOfRangeCallbackHandler();
    void numKeyboardContainer1ValidRangeCallbackHandler();
    void numKeyboardContainer1HideKeypadTriggerCallbackHandler();

};

#endif // CONFIGURACAOVIEWBASE_HPP
