/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef RECEITA_INFO_RESUMOBASE_HPP
#define RECEITA_INFO_RESUMOBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/Container.hpp>
#include <AT_module.hpp>
#include <AT_module_ext.hpp>
#include <gui/global/var.hpp>

class Receita_Info_resumoBase : public touchgfx::Container
{
public:
    Receita_Info_resumoBase();
    virtual ~Receita_Info_resumoBase() {}
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setFecharCallback(touchgfx::GenericCallback<>& callback)
    {
        this->fecharCallback = &callback;
    }

    /*
     * Custom Actions
     */
    virtual void start();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitFecharCallback()
    {
        if (fecharCallback && fecharCallback->isValid())
        {
            this->fecharCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box1;
    touchgfx::Box box2;
    touchgfx::Box box3;
    touchgfx::Box box4;
    touchgfx::TextArea textAreaLabelC;
    touchgfx::TextArea textAreaLabelMin;
    touchgfx::TextArea textAreaLabel2;
    touchgfx::Button buttonTelaInicial;
    touchgfx::TextAreaWithOneWildcard textAreaTemperaturaReceitaAtual;
    touchgfx::TextAreaWithOneWildcard textAreaNumeroReceita;
    touchgfx::Image imageTemp;
    touchgfx::Image imageTime;
    touchgfx::Image imageResf;
    touchgfx::Image imageCong;
    touchgfx::Image imageCsOn;
    touchgfx::Image imageCsOff;
    touchgfx::Container containerSoftHard;
    touchgfx::Image imageHard;
    touchgfx::Image imageSoft;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREATEMPERATURARECEITAATUAL_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaTemperaturaReceitaAtualBuffer[TEXTAREATEMPERATURARECEITAATUAL_SIZE];
    static const uint16_t TEXTAREANUMERORECEITA_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaNumeroReceitaBuffer[TEXTAREANUMERORECEITA_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Receita_Info_resumoBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* fecharCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // RECEITA_INFO_RESUMOBASE_HPP
