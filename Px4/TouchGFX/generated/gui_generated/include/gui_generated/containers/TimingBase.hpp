/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TIMINGBASE_HPP
#define TIMINGBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <gui/containers/Task.hpp>
#include <gui/containers/Timer.hpp>
#include <AT_module.hpp>
#include <AT_module_ext.hpp>
#include <gui/global/var.hpp>

class TimingBase : public touchgfx::Container
{
public:
    TimingBase();
    virtual ~TimingBase() {}
    virtual void initialize();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    Task taskTimer10s;
    Task taskTimer1s;
    Timer timerCycle25;
    Task taskCycle500;
    Task taskCycle50;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<TimingBase> taskCycle50CallCallback;
    touchgfx::Callback<TimingBase> taskCycle500CallCallback;
    touchgfx::Callback<TimingBase> timerCycle25TickCallback;
    touchgfx::Callback<TimingBase> taskTimer1sCallCallback;
    touchgfx::Callback<TimingBase> taskTimer10sCallCallback;
    touchgfx::Callback<TimingBase> timerCycle25BeginCallback;
    touchgfx::Callback<TimingBase> taskCycle50BeginCallback;
    touchgfx::Callback<TimingBase> taskCycle500BeginCallback;
    touchgfx::Callback<TimingBase> taskTimer1sBeginCallback;
    touchgfx::Callback<TimingBase> taskTimer10sBeginCallback;

    /*
     * Callback Handler Declarations
     */
    void taskCycle50CallCallbackHandler();
    void taskCycle500CallCallbackHandler();
    void timerCycle25TickCallbackHandler();
    void taskTimer1sCallCallbackHandler();
    void taskTimer10sCallCallbackHandler();
    void timerCycle25BeginCallbackHandler();
    void taskCycle50BeginCallbackHandler();
    void taskCycle500BeginCallbackHandler();
    void taskTimer1sBeginCallbackHandler();
    void taskTimer10sBeginCallbackHandler();

};

#endif // TIMINGBASE_HPP
