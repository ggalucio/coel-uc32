/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CONGELAR_SELECT_TEMPOVIEWBASE_HPP
#define CONGELAR_SELECT_TEMPOVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/congelar_select_tempo_screen/Congelar_select_TEMPOPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <gui/containers/numKeyboardContainer.hpp>
#include <gui/containers/Background.hpp>
#include <gui/containers/Timer.hpp>

class Congelar_select_TEMPOViewBase : public touchgfx::View<Congelar_select_TEMPOPresenter>
{
public:
    Congelar_select_TEMPOViewBase();
    virtual ~Congelar_select_TEMPOViewBase() {}
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void tearDownScreen();
    virtual void afterTransition();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box boxFundo;
    touchgfx::Box boxFundoAzul;
    touchgfx::Box boxFundoMinutos;
    touchgfx::TextArea textAreaTitle;
    touchgfx::TextArea textAreaUnidade;
    touchgfx::TextAreaWithOneWildcard textAreaTimerSpMinutos;
    touchgfx::ButtonWithLabel buttonWithLabelIncrementar;
    touchgfx::ButtonWithLabel buttonWithLabelDecrementar;
    touchgfx::TextArea textAreaTempoZero;
    touchgfx::Button buttonAvancar;
    touchgfx::Button buttonVoltar;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButtonTempo;
    numKeyboardContainer numKeyboardContainer1;
    Background background1;
    Timer timerCycle1s;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREATIMERSPMINUTOS_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaTimerSpMinutosBuffer[TEXTAREATIMERSPMINUTOS_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Congelar_select_TEMPOViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<Congelar_select_TEMPOViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<Congelar_select_TEMPOViewBase> numKeyboardContainer1OutOfRangeCallback;
    touchgfx::Callback<Congelar_select_TEMPOViewBase> numKeyboardContainer1ValidRangeCallback;
    touchgfx::Callback<Congelar_select_TEMPOViewBase> numKeyboardContainer1HideKeypadTriggerCallback;
    touchgfx::Callback<Congelar_select_TEMPOViewBase, double> numKeyboardContainer1EnterCallback;
    touchgfx::Callback<Congelar_select_TEMPOViewBase> timerCycle1sTickCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void numKeyboardContainer1OutOfRangeCallbackHandler();
    void numKeyboardContainer1ValidRangeCallbackHandler();
    void numKeyboardContainer1HideKeypadTriggerCallbackHandler();
    void numKeyboardContainer1EnterCallbackHandler(double value);
    void timerCycle1sTickCallbackHandler();

};

#endif // CONGELAR_SELECT_TEMPOVIEWBASE_HPP
