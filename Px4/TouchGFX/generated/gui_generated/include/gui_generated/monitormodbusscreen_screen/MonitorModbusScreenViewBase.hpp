/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MONITORMODBUSSCREENVIEWBASE_HPP
#define MONITORMODBUSSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/monitormodbusscreen_screen/MonitorModbusScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <gui/containers/numKeyboardContainer.hpp>

class MonitorModbusScreenViewBase : public touchgfx::View<MonitorModbusScreenPresenter>
{
public:
    MonitorModbusScreenViewBase();
    virtual ~MonitorModbusScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void tearDownScreen();
    virtual void afterTransition();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box boxFundo;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::Box box1;
    touchgfx::Box box2;
    touchgfx::Box box3;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea2_1;
    touchgfx::ButtonWithIcon buttonWithIcon1;
    touchgfx::TextAreaWithOneWildcard textAreaAddr;
    touchgfx::TextAreaWithOneWildcard textAreaValue;
    touchgfx::ButtonWithLabel buttonWithLabelRead;
    touchgfx::ButtonWithLabel buttonWithLabelWrite;
    touchgfx::ButtonWithIcon buttonWithIconProx;
    touchgfx::ButtonWithIcon buttonWithIconAnt;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButtonEditAddr;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButtonEditValue;
    numKeyboardContainer numKeyboardContainer1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREAADDR_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaAddrBuffer[TEXTAREAADDR_SIZE];
    static const uint16_t TEXTAREAVALUE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaValueBuffer[TEXTAREAVALUE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MonitorModbusScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<MonitorModbusScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<MonitorModbusScreenViewBase> numKeyboardContainer1HideKeypadTriggerCallback;
    touchgfx::Callback<MonitorModbusScreenViewBase> numKeyboardContainer1OutOfRangeCallback;
    touchgfx::Callback<MonitorModbusScreenViewBase> numKeyboardContainer1ValidRangeCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void numKeyboardContainer1HideKeypadTriggerCallbackHandler();
    void numKeyboardContainer1OutOfRangeCallbackHandler();
    void numKeyboardContainer1ValidRangeCallbackHandler();

};

#endif // MONITORMODBUSSCREENVIEWBASE_HPP
