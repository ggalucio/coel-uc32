/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/Receita_Info_resumoBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

Receita_Info_resumoBase::Receita_Info_resumoBase() :
    buttonCallback(this, &Receita_Info_resumoBase::buttonCallbackHandler),
    fecharCallback(0)
{
    setWidth(480);
    setHeight(272);
    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    box1.setAlpha(128);

    box2.setPosition(77, 14, 326, 244);
    box2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 128));

    box3.setPosition(210, 85, 76, 42);
    box3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 0));

    box4.setPosition(271, 26, 46, 28);
    box4.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));

    textAreaLabel1.setXY(294, 96);
    textAreaLabel1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaLabel1.setLinespacing(0);
    textAreaLabel1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3992));

    textAreaLabel2.setXY(169, 23);
    textAreaLabel2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaLabel2.setLinespacing(0);
    textAreaLabel2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3993));

    buttonTelaInicial.setXY(141, 204);
    buttonTelaInicial.setBitmaps(touchgfx::Bitmap(BITMAP_FECHAR_ID), touchgfx::Bitmap(BITMAP_FECHAR_ID));
    buttonTelaInicial.setAction(buttonCallback);

    toggleButtonReceitaTimeTempAtual.setXY(141, 147);
    toggleButtonReceitaTimeTempAtual.setBitmaps(touchgfx::Bitmap(BITMAP_REL_ID), touchgfx::Bitmap(BITMAP_TRM_ID));

    toggleButtonReceitaCongResfAtual.setXY(195, 147);
    toggleButtonReceitaCongResfAtual.setBitmaps(touchgfx::Bitmap(BITMAP_C_ID), touchgfx::Bitmap(BITMAP_R_ID));

    toggleButtonReceitaHardSoftAtual.setXY(248, 147);
    toggleButtonReceitaHardSoftAtual.setBitmaps(touchgfx::Bitmap(BITMAP_S_ID), touchgfx::Bitmap(BITMAP_H_ID));

    toggleButtonReceitaConservAtaul.setXY(301, 147);
    toggleButtonReceitaConservAtaul.setBitmaps(touchgfx::Bitmap(BITMAP_CS_ID), touchgfx::Bitmap(BITMAP_CSON_ID));

    textAreaTemperaturaReceitaAtual.setPosition(210, 85, 76, 42);
    textAreaTemperaturaReceitaAtual.setColor(touchgfx::Color::getColorFromRGB(0, 0, 128));
    textAreaTemperaturaReceitaAtual.setLinespacing(0);
    Unicode::snprintf(textAreaTemperaturaReceitaAtualBuffer, TEXTAREATEMPERATURARECEITAATUAL_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3991).getText());
    textAreaTemperaturaReceitaAtual.setWildcard(textAreaTemperaturaReceitaAtualBuffer);
    textAreaTemperaturaReceitaAtual.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3990));

    textAreaNumeroReceita.setPosition(271, 26, 46, 28);
    textAreaNumeroReceita.setColor(touchgfx::Color::getColorFromRGB(53, 66, 184));
    textAreaNumeroReceita.setLinespacing(0);
    Unicode::snprintf(textAreaNumeroReceitaBuffer, TEXTAREANUMERORECEITA_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3995).getText());
    textAreaNumeroReceita.setWildcard(textAreaNumeroReceitaBuffer);
    textAreaNumeroReceita.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3994));

    add(box1);
    add(box2);
    add(box3);
    add(box4);
    add(textAreaLabel1);
    add(textAreaLabel2);
    add(buttonTelaInicial);
    add(toggleButtonReceitaTimeTempAtual);
    add(toggleButtonReceitaCongResfAtual);
    add(toggleButtonReceitaHardSoftAtual);
    add(toggleButtonReceitaConservAtaul);
    add(textAreaTemperaturaReceitaAtual);
    add(textAreaNumeroReceita);
}

void Receita_Info_resumoBase::initialize()
{

}

void Receita_Info_resumoBase::init()
{
    //Initialize
    //When init is called execute C++ code
    //Execute C++ code
    Update(&textAreaNumeroReceita, textAreaNumeroReceitaBuffer, ReadJobData(255, _INT_), _INT_, 0);
    Update(&textAreaTemperaturaReceitaAtual, textAreaTemperaturaReceitaAtualBuffer, ReadJobData(2, _DOUBLE_), _DOUBLE_, 1);
}

void Receita_Info_resumoBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonTelaInicial)
    {
        //Fechar
        //When buttonTelaInicial clicked emit fechar callback
        //Emit callback
        emitFecharCallback();
    }
}

