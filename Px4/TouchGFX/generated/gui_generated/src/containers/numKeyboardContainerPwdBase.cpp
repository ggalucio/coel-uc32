/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/numKeyboardContainerPwdBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"
#include <AT_module.hpp>


numKeyboardContainerPwdBase::numKeyboardContainerPwdBase() :
    buttonCallback(this, &numKeyboardContainerPwdBase::buttonCallbackHandler),
    CancelTriggerCallback(0),
    CredentialSuccessCallback(0),
    CredentialFailedCallback(0)
{
    setWidth(480);
    setHeight(272);
    backgroundBox.setPosition(0, 0, 480, 272);
    backgroundBox.setColor(touchgfx::Color::getColorFromRGB(69, 69, 69));

    keyboardBox.setPosition(35, 0, 410, 272);
    keyboardBox.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    textBox.setPosition(43, 21, 394, 38);
    textBox.setColor(touchgfx::Color::getColorFromRGB(129, 129, 129));
    textBox.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textBox.setBorderSize(2);

    valTxt.setPosition(63, 22, 353, 36);
    valTxt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    valTxt.setLinespacing(0);
    valTxtBuffer[0] = 0;
    valTxt.setWildcard(valTxtBuffer);
    valTxt.setTypedText(touchgfx::TypedText(T_SINGLEUSEID273));

    dotBtn.setXY(55, 214);
    dotBtn.setBitmaps(touchgfx::Bitmap(BITMAP_DOT_RELEASED_ID), touchgfx::Bitmap(BITMAP_DOT_PRESSED_ID));
    dotBtn.setAction(buttonCallback);

    delBtn.setXY(243, 213);
    delBtn.setBitmaps(touchgfx::Bitmap(BITMAP_DEL_RELEASED_ID), touchgfx::Bitmap(BITMAP_DEL_PRESSED_ID));
    delBtn.setAction(buttonCallback);

    zeroBtn.setXY(149, 214);
    zeroBtn.setBitmaps(touchgfx::Bitmap(BITMAP_NUMKEY_RELEASED_ID), touchgfx::Bitmap(BITMAP_NUMKEY_PRESSED_ID));
    zeroBtn.setLabelText(touchgfx::TypedText(T_SINGLEUSEID275));
    zeroBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    zeroBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    zeroBtn.setAction(buttonCallback);

    oneBtn.setXY(55, 70);
    oneBtn.setBitmaps(touchgfx::Bitmap(BITMAP_NUMKEY_RELEASED_ID), touchgfx::Bitmap(BITMAP_NUMKEY_PRESSED_ID));
    oneBtn.setLabelText(touchgfx::TypedText(T_SINGLEUSEID276));
    oneBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    oneBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    oneBtn.setAction(buttonCallback);

    twoBtn.setXY(149, 70);
    twoBtn.setBitmaps(touchgfx::Bitmap(BITMAP_NUMKEY_RELEASED_ID), touchgfx::Bitmap(BITMAP_NUMKEY_PRESSED_ID));
    twoBtn.setLabelText(touchgfx::TypedText(T_SINGLEUSEID277));
    twoBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    twoBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    twoBtn.setAction(buttonCallback);

    threeBtn.setXY(243, 70);
    threeBtn.setBitmaps(touchgfx::Bitmap(BITMAP_NUMKEY_RELEASED_ID), touchgfx::Bitmap(BITMAP_NUMKEY_PRESSED_ID));
    threeBtn.setLabelText(touchgfx::TypedText(T_SINGLEUSEID278));
    threeBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    threeBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    threeBtn.setAction(buttonCallback);

    fourBtn.setXY(55, 118);
    fourBtn.setBitmaps(touchgfx::Bitmap(BITMAP_NUMKEY_RELEASED_ID), touchgfx::Bitmap(BITMAP_NUMKEY_PRESSED_ID));
    fourBtn.setLabelText(touchgfx::TypedText(T_SINGLEUSEID279));
    fourBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    fourBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    fourBtn.setAction(buttonCallback);

    fiveBtn.setXY(149, 118);
    fiveBtn.setBitmaps(touchgfx::Bitmap(BITMAP_NUMKEY_RELEASED_ID), touchgfx::Bitmap(BITMAP_NUMKEY_PRESSED_ID));
    fiveBtn.setLabelText(touchgfx::TypedText(T_SINGLEUSEID280));
    fiveBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    fiveBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    fiveBtn.setAction(buttonCallback);

    sixBtn.setXY(243, 118);
    sixBtn.setBitmaps(touchgfx::Bitmap(BITMAP_NUMKEY_RELEASED_ID), touchgfx::Bitmap(BITMAP_NUMKEY_PRESSED_ID));
    sixBtn.setLabelText(touchgfx::TypedText(T_SINGLEUSEID281));
    sixBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    sixBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    sixBtn.setAction(buttonCallback);

    sevenBtn.setXY(55, 166);
    sevenBtn.setBitmaps(touchgfx::Bitmap(BITMAP_NUMKEY_RELEASED_ID), touchgfx::Bitmap(BITMAP_NUMKEY_PRESSED_ID));
    sevenBtn.setLabelText(touchgfx::TypedText(T_SINGLEUSEID282));
    sevenBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    sevenBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    sevenBtn.setAction(buttonCallback);

    eightBtn.setXY(149, 166);
    eightBtn.setBitmaps(touchgfx::Bitmap(BITMAP_NUMKEY_RELEASED_ID), touchgfx::Bitmap(BITMAP_NUMKEY_PRESSED_ID));
    eightBtn.setLabelText(touchgfx::TypedText(T_SINGLEUSEID283));
    eightBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    eightBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    eightBtn.setAction(buttonCallback);

    nineBtn.setXY(243, 166);
    nineBtn.setBitmaps(touchgfx::Bitmap(BITMAP_NUMKEY_RELEASED_ID), touchgfx::Bitmap(BITMAP_NUMKEY_PRESSED_ID));
    nineBtn.setLabelText(touchgfx::TypedText(T_SINGLEUSEID284));
    nineBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    nineBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    nineBtn.setAction(buttonCallback);

    cancelBtn.setXY(336, 166);
    cancelBtn.setBitmaps(touchgfx::Bitmap(BITMAP_NUMKEY_RELEASED_ID), touchgfx::Bitmap(BITMAP_NUMKEY_PRESSED_ID));
    cancelBtn.setLabelText(touchgfx::TypedText(T_SINGLEUSEID285));
    cancelBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    cancelBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    cancelBtn.setAction(buttonCallback);

    okBtn.setXY(336, 213);
    okBtn.setBitmaps(touchgfx::Bitmap(BITMAP_NUMKEY_RELEASED_ID), touchgfx::Bitmap(BITMAP_NUMKEY_PRESSED_ID));
    okBtn.setLabelText(touchgfx::TypedText(T_SINGLEUSEID286));
    okBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    okBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    okBtn.setAction(buttonCallback);

    signBtn.setXY(336, 70);
    signBtn.setBitmaps(touchgfx::Bitmap(BITMAP_NUMKEY_RELEASED_ID), touchgfx::Bitmap(BITMAP_NUMKEY_PRESSED_ID));
    signBtn.setLabelText(touchgfx::TypedText(T_SINGLEUSEID287));
    signBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    signBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    signBtn.setAction(buttonCallback);

    clearBtn.setXY(336, 118);
    clearBtn.setBitmaps(touchgfx::Bitmap(BITMAP_NUMKEY_RELEASED_ID), touchgfx::Bitmap(BITMAP_NUMKEY_PRESSED_ID));
    clearBtn.setLabelText(touchgfx::TypedText(T_SINGLEUSEID288));
    clearBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    clearBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    clearBtn.setAction(buttonCallback);

    hideValTxt.setPosition(59, 58, 353, 36);
    hideValTxt.setVisible(false);
    hideValTxt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    hideValTxt.setLinespacing(0);
    Unicode::snprintf(hideValTxtBuffer, HIDEVALTXT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID290).getText());
    hideValTxt.setWildcard(hideValTxtBuffer);
    hideValTxt.setTypedText(touchgfx::TypedText(T_SINGLEUSEID289));

    errTxt.setPosition(43, 22, 394, 36);
    errTxt.setVisible(false);
    errTxt.setColor(touchgfx::Color::getColorFromRGB(180, 22, 22));
    errTxt.setLinespacing(0);
    errTxt.setTypedText(touchgfx::TypedText(T_RESOURCEERRPWDID));

    add(backgroundBox);
    add(keyboardBox);
    add(textBox);
    add(valTxt);
    add(dotBtn);
    add(delBtn);
    add(zeroBtn);
    add(oneBtn);
    add(twoBtn);
    add(threeBtn);
    add(fourBtn);
    add(fiveBtn);
    add(sixBtn);
    add(sevenBtn);
    add(eightBtn);
    add(nineBtn);
    add(cancelBtn);
    add(okBtn);
    add(signBtn);
    add(clearBtn);
    add(hideValTxt);
    add(errTxt);
}

void numKeyboardContainerPwdBase::initialize()
{

}

void numKeyboardContainerPwdBase::LaunchNumericalKeyboard()
{
    //ContainerIsEntered
    //When LaunchNumericalKeyboard is called execute C++ code
    //Execute C++ code
    VisibilityTextArea(&errTxt, false);
    VisibilityTextArea(&valTxt, true);
    InitNumKeyboard(&hideValTxt, hideValTxtBuffer, 10, &errTxt);
    InitPwdNumKeyboard(&valTxt, valTxtBuffer);
}

void numKeyboardContainerPwdBase::ViewErrorMsg()
{
    //ViewErrorMsg
    //When ViewErrorMsg is called execute C++ code
    //Execute C++ code
    VisibilityTextArea(&errTxt, true);
    VisibilityTextArea(&valTxt, false);
}

void numKeyboardContainerPwdBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &dotBtn)
    {
        //DotBtnClicked
        //When dotBtn clicked execute C++ code
        //Execute C++ code
        //AddNumKeyboard('.');
        //SoundBuzzerOn(25);
    }
    else if (&src == &delBtn)
    {
        //DeleteBtnClicked
        //When delBtn clicked execute C++ code
        //Execute C++ code
        RemoveNumKeyboard();
        SoundBuzzerOn(25);
    }
    else if (&src == &zeroBtn)
    {
        //ZeroBtnClicked
        //When zeroBtn clicked execute C++ code
        //Execute C++ code
        AddNumKeyboard('0');
        SoundBuzzerOn(25);
    }
    else if (&src == &oneBtn)
    {
        //OneBtnClicked
        //When oneBtn clicked execute C++ code
        //Execute C++ code
        AddNumKeyboard('1');
        SoundBuzzerOn(25);
    }
    else if (&src == &twoBtn)
    {
        //TwoBtnClicked
        //When twoBtn clicked execute C++ code
        //Execute C++ code
        AddNumKeyboard('2');
        SoundBuzzerOn(25);
    }
    else if (&src == &threeBtn)
    {
        //ThreeBtnClicked
        //When threeBtn clicked execute C++ code
        //Execute C++ code
        AddNumKeyboard('3');
        SoundBuzzerOn(25);
    }
    else if (&src == &fourBtn)
    {
        //FourBtnClicked
        //When fourBtn clicked execute C++ code
        //Execute C++ code
        AddNumKeyboard('4');
        SoundBuzzerOn(25);
    }
    else if (&src == &fiveBtn)
    {
        //FiveBtnClicked
        //When fiveBtn clicked execute C++ code
        //Execute C++ code
        AddNumKeyboard('5');
        SoundBuzzerOn(25);
    }
    else if (&src == &sixBtn)
    {
        //SixBtnClicked
        //When sixBtn clicked execute C++ code
        //Execute C++ code
        AddNumKeyboard('6');
        SoundBuzzerOn(25);
    }
    else if (&src == &sevenBtn)
    {
        //SevenBtnClicked
        //When sevenBtn clicked execute C++ code
        //Execute C++ code
        AddNumKeyboard('7');
        SoundBuzzerOn(25);
    }
    else if (&src == &eightBtn)
    {
        //EightBtnClicked
        //When eightBtn clicked execute C++ code
        //Execute C++ code
        AddNumKeyboard('8');
        SoundBuzzerOn(25);
    }
    else if (&src == &nineBtn)
    {
        //NineBtnClicked
        //When nineBtn clicked execute C++ code
        //Execute C++ code
        AddNumKeyboard('9');
        SoundBuzzerOn(25);
    }
    else if (&src == &cancelBtn)
    {
        //CancelBtnClicked
        //When cancelBtn clicked emit CancelTrigger callback
        //Emit callback
        emitCancelTriggerCallback();
    }
    else if (&src == &okBtn)
    {
        //OkBtnClicked
        //When okBtn clicked execute C++ code
        //Execute C++ code
        CheckPwd(CredentialSuccessCallback, CredentialFailedCallback);
        SoundBuzzerOn(25);
    }
    else if (&src == &signBtn)
    {
        //SignBtnPressed
        //When signBtn clicked execute C++ code
        //Execute C++ code
        //AddNumKeyboard('+');
        //SoundBuzzerOn(25);
    }
    else if (&src == &clearBtn)
    {
        //ClearBtnPressed
        //When clearBtn clicked execute C++ code
        //Execute C++ code
        AddNumKeyboard('<');
        SoundBuzzerOn(25);
    }
}

