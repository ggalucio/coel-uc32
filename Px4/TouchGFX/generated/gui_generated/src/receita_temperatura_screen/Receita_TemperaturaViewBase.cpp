/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/receita_temperatura_screen/Receita_TemperaturaViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

Receita_TemperaturaViewBase::Receita_TemperaturaViewBase() :
    buttonCallback(this, &Receita_TemperaturaViewBase::buttonCallbackHandler),
    cANCELAR_PROCESSO1CancelarProcessoCallback(this, &Receita_TemperaturaViewBase::cANCELAR_PROCESSO1CancelarProcessoCallbackHandler),
    cANCELAR_PROCESSO1NaoCallback(this, &Receita_TemperaturaViewBase::cANCELAR_PROCESSO1NaoCallbackHandler),
    timerCycle1sTickCallback(this, &Receita_TemperaturaViewBase::timerCycle1sTickCallbackHandler),
    timerCycle10TickCallback(this, &Receita_TemperaturaViewBase::timerCycle10TickCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    boxFundo.setPosition(0, 0, 480, 272);
    boxFundo.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));

    boxProcessOff.setPosition(5, 64, 392, 196);
    boxProcessOff.setColor(touchgfx::Color::getColorFromRGB(241, 241, 242));

    boxFlagProcessoAndamento.setPosition(5, 64, 392, 196);
    boxFlagProcessoAndamento.setVisible(false);
    boxFlagProcessoAndamento.setColor(touchgfx::Color::getColorFromRGB(243, 120, 54));

    boxFundoAzul.setPosition(0, 0, 480, 53);
    boxFundoAzul.setColor(touchgfx::Color::getColorFromRGB(243, 120, 54));

    boxWithBorderBox3.setPosition(66, 133, 324, 57);
    boxWithBorderBox3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorderBox3.setBorderColor(touchgfx::Color::getColorFromRGB(243, 120, 54));
    boxWithBorderBox3.setBorderSize(1);

    boxWithBorderBox2.setPosition(66, 197, 324, 57);
    boxWithBorderBox2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorderBox2.setBorderColor(touchgfx::Color::getColorFromRGB(243, 120, 54));
    boxWithBorderBox2.setBorderSize(1);

    boxWithBorderBox1.setPosition(66, 70, 324, 57);
    boxWithBorderBox1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorderBox1.setBorderColor(touchgfx::Color::getColorFromRGB(243, 120, 54));
    boxWithBorderBox1.setBorderSize(1);

    boxFundoAzul2.setPosition(181, 105, 105, 19);
    boxFundoAzul2.setColor(touchgfx::Color::getColorFromRGB(243, 120, 54));

    textAreaUnidade2.setXY(337, 134);
    textAreaUnidade2.setColor(touchgfx::Color::getColorFromRGB(243, 120, 54));
    textAreaUnidade2.setLinespacing(0);
    textAreaUnidade2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3940));

    textAreaUnidade3.setXY(337, 199);
    textAreaUnidade3.setColor(touchgfx::Color::getColorFromRGB(243, 120, 54));
    textAreaUnidade3.setLinespacing(0);
    textAreaUnidade3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3941));

    textAreaUnidade1.setXY(353, 71);
    textAreaUnidade1.setColor(touchgfx::Color::getColorFromRGB(243, 120, 54));
    textAreaUnidade1.setLinespacing(0);
    textAreaUnidade1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3942));

    textAreaTitle.setXY(5, 8);
    textAreaTitle.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaTitle.setLinespacing(0);
    textAreaTitle.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3943));

    buttonCancelarProcesso.setXY(406, 64);
    buttonCancelarProcesso.setBitmaps(touchgfx::Bitmap(BITMAP_VOLTAR_ID), touchgfx::Bitmap(BITMAP_VOLTAR_ID));
    buttonCancelarProcesso.setAction(buttonCallback);

    toggleButtonFlagConservarSN.setXY(405, 208);
    toggleButtonFlagConservarSN.setBitmaps(touchgfx::Bitmap(BITMAP_CSVOFF_ID), touchgfx::Bitmap(BITMAP_CSVON_ID));
    toggleButtonFlagConservarSN.setAction(buttonCallback);

    imageVazio.setXY(406, 136);
    imageVazio.setBitmap(touchgfx::Bitmap(BITMAP_VAZIO_ID));

    image1.setXY(25, 79);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_THERMOM_ID));

    image2.setXY(18, 209);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_AMPULHETA_ID));

    image3.setXY(18, 146);
    image3.setBitmap(touchgfx::Bitmap(BITMAP_AMPULHETA_ID));

    textAreaLabel1.setXY(73, 71);
    textAreaLabel1.setColor(touchgfx::Color::getColorFromRGB(243, 120, 54));
    textAreaLabel1.setLinespacing(0);
    textAreaLabel1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3944));

    textAreaLabel2.setXY(73, 136);
    textAreaLabel2.setColor(touchgfx::Color::getColorFromRGB(243, 120, 54));
    textAreaLabel2.setLinespacing(0);
    textAreaLabel2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3945));

    textAreaLabel3.setXY(73, 199);
    textAreaLabel3.setColor(touchgfx::Color::getColorFromRGB(243, 120, 54));
    textAreaLabel3.setLinespacing(0);
    textAreaLabel3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3946));

    textAreaTimerCountMinutos.setPosition(172, 134, 121, 56);
    textAreaTimerCountMinutos.setColor(touchgfx::Color::getColorFromRGB(243, 120, 54));
    textAreaTimerCountMinutos.setLinespacing(0);
    Unicode::snprintf(textAreaTimerCountMinutosBuffer, TEXTAREATIMERCOUNTMINUTOS_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3948).getText());
    textAreaTimerCountMinutos.setWildcard(textAreaTimerCountMinutosBuffer);
    textAreaTimerCountMinutos.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3947));

    textAreaTempoEstimadoReceitaTemprat.setPosition(172, 199, 121, 55);
    textAreaTempoEstimadoReceitaTemprat.setColor(touchgfx::Color::getColorFromRGB(243, 120, 54));
    textAreaTempoEstimadoReceitaTemprat.setLinespacing(0);
    Unicode::snprintf(textAreaTempoEstimadoReceitaTempratBuffer, TEXTAREATEMPOESTIMADORECEITATEMPRAT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3950).getText());
    textAreaTempoEstimadoReceitaTemprat.setWildcard(textAreaTempoEstimadoReceitaTempratBuffer);
    textAreaTempoEstimadoReceitaTemprat.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3949));

    textAreaFlagProcessoAndamento.setPosition(316, 14, 157, 31);
    textAreaFlagProcessoAndamento.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaFlagProcessoAndamento.setLinespacing(0);
    Unicode::snprintf(textAreaFlagProcessoAndamentoBuffer, TEXTAREAFLAGPROCESSOANDAMENTO_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID5420).getText());
    textAreaFlagProcessoAndamento.setWildcard(textAreaFlagProcessoAndamentoBuffer);
    textAreaFlagProcessoAndamento.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3951));

    textAreaTimerCongelarDecorridoCount.setPosition(328, 165, 56, 18);
    textAreaTimerCongelarDecorridoCount.setColor(touchgfx::Color::getColorFromRGB(243, 120, 54));
    textAreaTimerCongelarDecorridoCount.setLinespacing(0);
    Unicode::snprintf(textAreaTimerCongelarDecorridoCountBuffer, TEXTAREATIMERCONGELARDECORRIDOCOUNT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3953).getText());
    textAreaTimerCongelarDecorridoCount.setWildcard(textAreaTimerCongelarDecorridoCountBuffer);
    textAreaTimerCongelarDecorridoCount.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3952));

    textArea14515.setPosition(172, 69, 121, 56);
    textArea14515.setColor(touchgfx::Color::getColorFromRGB(243, 120, 54));
    textArea14515.setLinespacing(0);
    Unicode::snprintf(textArea14515Buffer, TEXTAREA14515_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3955).getText());
    textArea14515.setWildcard(textArea14515Buffer);
    textArea14515.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3954));

    textAreaTemperaturaReceitaAtual.setPosition(181, 105, 105, 18);
    textAreaTemperaturaReceitaAtual.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaTemperaturaReceitaAtual.setLinespacing(0);
    Unicode::snprintf(textAreaTemperaturaReceitaAtualBuffer, TEXTAREATEMPERATURARECEITAATUAL_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3957).getText());
    textAreaTemperaturaReceitaAtual.setWildcard(textAreaTemperaturaReceitaAtualBuffer);
    textAreaTemperaturaReceitaAtual.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3956));

    textArea14512.setPosition(328, 102, 56, 18);
    textArea14512.setColor(touchgfx::Color::getColorFromRGB(243, 120, 54));
    textArea14512.setLinespacing(0);
    Unicode::snprintf(textArea14512Buffer, TEXTAREA14512_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID5439).getText());
    textArea14512.setWildcard(textArea14512Buffer);
    textArea14512.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3958));

    cANCELAR_PROCESSO1.setXY(0, 0);
    cANCELAR_PROCESSO1.setVisible(false);
    cANCELAR_PROCESSO1.setCancelarProcessoCallback(cANCELAR_PROCESSO1CancelarProcessoCallback);
    cANCELAR_PROCESSO1.setNaoCallback(cANCELAR_PROCESSO1NaoCallback);

    background1.setXY(0, 0);

    timerCycle1s.setXY(0, 0);
    timerCycle1s.setVisible(false);
    timerCycle1s.setTickCallback(timerCycle1sTickCallback);

    timerCycle10.setXY(0, 0);
    timerCycle10.setVisible(false);
    timerCycle10.setTickCallback(timerCycle10TickCallback);

    add(__background);
    add(boxFundo);
    add(boxProcessOff);
    add(boxFlagProcessoAndamento);
    add(boxFundoAzul);
    add(boxWithBorderBox3);
    add(boxWithBorderBox2);
    add(boxWithBorderBox1);
    add(boxFundoAzul2);
    add(textAreaUnidade2);
    add(textAreaUnidade3);
    add(textAreaUnidade1);
    add(textAreaTitle);
    add(buttonCancelarProcesso);
    add(toggleButtonFlagConservarSN);
    add(imageVazio);
    add(image1);
    add(image2);
    add(image3);
    add(textAreaLabel1);
    add(textAreaLabel2);
    add(textAreaLabel3);
    add(textAreaTimerCountMinutos);
    add(textAreaTempoEstimadoReceitaTemprat);
    add(textAreaFlagProcessoAndamento);
    add(textAreaTimerCongelarDecorridoCount);
    add(textArea14515);
    add(textAreaTemperaturaReceitaAtual);
    add(textArea14512);
    add(cANCELAR_PROCESSO1);
    add(background1);
    add(timerCycle1s);
    add(timerCycle10);
}

void Receita_TemperaturaViewBase::setupScreen()
{
    cANCELAR_PROCESSO1.initialize();
    background1.initialize();
    timerCycle1s.initialize();
    timerCycle10.initialize();
    //ScreenTransitionBegins
    //When screen transition begins execute C++ code
    //Execute C++ code
    flag_recuperar_leitura_begin = false;
    
    ReadWriteModbus485(512, 1, _DOUBLE_, REPEAT);
    ReadWriteModbus485(515, 1, _DOUBLE_, REPEAT);
    
    Update(&textAreaTempoEstimadoReceitaTemprat, textAreaTempoEstimadoReceitaTempratBuffer, Tempo_Estimado_Receita_Temperat, _INT_, 0);
    Update(&textAreaFlagProcessoAndamento, textAreaFlagProcessoAndamentoBuffer, "OPERANDO...", 20);
    Update(&toggleButtonFlagConservarSN, flag_Conservar_S_N);
    
    timerCycle1s.setWaitTime(1000);
    timerCycle1s.start();
    
    timerCycle10.setWaitTime(100);
    timerCycle10.start();

}

//Called when the screen transition ends
void Receita_TemperaturaViewBase::afterTransition()
{
    //ScreenTransitionEnds
    //When screen transition ends execute C++ code
    //Execute C++ code
    SoundBuzzerOn(25);
}

void Receita_TemperaturaViewBase::cANCELAR_PROCESSO1CancelarProcessoCallbackHandler()
{
    //CancelarProcessoSim
    //When cANCELAR_PROCESSO1 cancelarProcesso execute C++ code
    //Execute C++ code
    cancelar_processo_SIM = true;
}

void Receita_TemperaturaViewBase::cANCELAR_PROCESSO1NaoCallbackHandler()
{
    //Nao
    //When cANCELAR_PROCESSO1 nao execute C++ code
    //Execute C++ code
    ContainerVisibility(&cANCELAR_PROCESSO1, false);
    SoundBuzzerOn(25);
}

void Receita_TemperaturaViewBase::timerCycle1sTickCallbackHandler()
{
    //Cycle_1s
    //When timerCycle1s tick execute C++ code
    //Execute C++ code
    VisibilityTextArea(&textAreaFlagProcessoAndamento, !flag_Processo_ANDAMENTO || !textAreaFlagProcessoAndamento.isVisible());;
}

void Receita_TemperaturaViewBase::timerCycle10TickCallbackHandler()
{
    //Cycle_100ms
    //When timerCycle10 tick execute C++ code
    //Execute C++ code
    if (flag_recuperar_leitura_begin)
    {
    	ReadWriteModbus485(512, 1, _DOUBLE_, REPEAT);
    	ReadWriteModbus485(515, 1, _DOUBLE_, REPEAT);
    	Wait(50);
    
    	flag_recuperar_leitura_begin = false;
    }
    else
    {
    	VisibilityBox(&boxFlagProcessoAndamento, flag_Processo_ANDAMENTO);
    
    	Update(&textAreaFlagProcessoAndamento, textAreaFlagProcessoAndamentoBuffer, flag_Processo_ANDAMENTO ? (char*)"OPERANDO..." : (char*)"Finalizado!", 20);
    	Update(&textAreaTemperaturaReceitaAtual, textAreaTemperaturaReceitaAtualBuffer, Temperatura_Receita_ATUAL / 10.0, _DOUBLE_, 1);
    	Update(&textAreaTimerCountMinutos, textAreaTimerCountMinutosBuffer, Timer_COUNT_MINUTOS, _INT_, 0);
    	Update(&textAreaTimerCongelarDecorridoCount, textAreaTimerCongelarDecorridoCountBuffer, 0, _INT_, 0);
    
    	W_1_4512 = 10.0 * ReadBufferModbus485(512);
    	W_1_4515 = 10.0 * ReadBufferModbus485(515);
    }
}

void Receita_TemperaturaViewBase::tearDownScreen()
{
    //TearDownScreen
    //When tearDownScreen is called execute C++ code
    //Execute C++ code
    Clear();
}

void Receita_TemperaturaViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonCancelarProcesso)
    {
        //Voltar
        //When buttonCancelarProcesso clicked execute C++ code
        //Execute C++ code
        ContainerVisibility(&cANCELAR_PROCESSO1, true);
        SoundBuzzerOn(25);
    }
    else if (&src == &toggleButtonFlagConservarSN)
    {
        //CSV
        //When toggleButtonFlagConservarSN clicked execute C++ code
        //Execute C++ code
        flag_Conservar_S_N = toggleButtonFlagConservarSN.getState();
        SoundBuzzerOn(25);
    }
}
