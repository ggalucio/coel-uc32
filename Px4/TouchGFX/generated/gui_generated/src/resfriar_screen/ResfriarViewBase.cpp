/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/resfriar_screen/ResfriarViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

ResfriarViewBase::ResfriarViewBase() :
    buttonCallback(this, &ResfriarViewBase::buttonCallbackHandler),
    radioButtonSelectedCallback(this, &ResfriarViewBase::radioButtonSelectedCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    boxFundo.setPosition(0, 0, 480, 272);
    boxFundo.setColor(touchgfx::Color::getColorFromRGB(240, 240, 240));

    boxFundoAzul.setPosition(0, 0, 480, 53);
    boxFundoAzul.setColor(touchgfx::Color::getColorFromRGB(0, 175, 239));

    textAreaTitle.setXY(5, 8);
    textAreaTitle.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaTitle.setLinespacing(0);
    textAreaTitle.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3789));

    radioButtonStatusTeclaCongela0.setXY(14, 64);
    radioButtonStatusTeclaCongela0.setBitmaps(touchgfx::Bitmap(BITMAP_RESFRIARSONDAOFF_ID), touchgfx::Bitmap(BITMAP_RESFRIARSONDAON_ID), touchgfx::Bitmap(BITMAP_RESFRIARSONDAON_ID), touchgfx::Bitmap(BITMAP_RESFRIARSONDAON_ID));
    radioButtonStatusTeclaCongela0.setSelected(false);
    radioButtonStatusTeclaCongela0.setDeselectionEnabled(false);

    radioButtonStatusTeclaCongela1.setXY(140, 64);
    radioButtonStatusTeclaCongela1.setBitmaps(touchgfx::Bitmap(BITMAP_RESFRIARTEMPOOFF_ID), touchgfx::Bitmap(BITMAP_RESFRIARTEMPOON_ID), touchgfx::Bitmap(BITMAP_RESFRIARTEMPOON_ID), touchgfx::Bitmap(BITMAP_RESFRIARTEMPOON_ID));
    radioButtonStatusTeclaCongela1.setSelected(false);
    radioButtonStatusTeclaCongela1.setDeselectionEnabled(false);

    buttonFlagResfriarSondaTempo.setXY(406, 208);
    buttonFlagResfriarSondaTempo.setBitmaps(touchgfx::Bitmap(BITMAP_AVANCE_ID), touchgfx::Bitmap(BITMAP_AVANCEON_ID));
    buttonFlagResfriarSondaTempo.setAction(buttonCallback);

    buttonTelaInicial.setXY(406, 64);
    buttonTelaInicial.setBitmaps(touchgfx::Bitmap(BITMAP_VOLTAR_ID), touchgfx::Bitmap(BITMAP_VOLTAR_ID));
    buttonTelaInicial.setAction(buttonCallback);

    toggleButtonFlagResfriarHardSoft.setXY(406, 136);
    toggleButtonFlagResfriarHardSoft.setBitmaps(touchgfx::Bitmap(BITMAP_SOFT_ID), touchgfx::Bitmap(BITMAP_HARD_ID));
    toggleButtonFlagResfriarHardSoft.setAction(buttonCallback);

    imageStatusPorta.setXY(200, 0);
    imageStatusPorta.setVisible(false);
    imageStatusPorta.setBitmap(touchgfx::Bitmap(BITMAP_PORTA_ID));

    textAreaStatusPorta.setXY(98, 13);
    textAreaStatusPorta.setVisible(false);
    textAreaStatusPorta.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaStatusPorta.setLinespacing(0);
    Unicode::snprintf(textAreaStatusPortaBuffer, TEXTAREASTATUSPORTA_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID4122).getText());
    textAreaStatusPorta.setWildcard(textAreaStatusPortaBuffer);
    textAreaStatusPorta.resizeToCurrentText();
    textAreaStatusPorta.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4121));

    add(__background);
    add(boxFundo);
    add(boxFundoAzul);
    add(textAreaTitle);
    add(radioButtonStatusTeclaCongela0);
    add(radioButtonStatusTeclaCongela1);
    add(buttonFlagResfriarSondaTempo);
    add(buttonTelaInicial);
    add(toggleButtonFlagResfriarHardSoft);
    add(imageStatusPorta);
    add(textAreaStatusPorta);
    radioButtonGroup1.add(radioButtonStatusTeclaCongela0);
    radioButtonGroup1.add(radioButtonStatusTeclaCongela1);
    radioButtonGroup1.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
}

void ResfriarViewBase::setupScreen()
{

    //ScreenTransitionBegins
    //When screen transition begins execute C++ code
    //Execute C++ code
    W_HDW5000 = 10;
    
    Clear();
    
    ReadWriteModbus485(&textAreaStatusPorta, textAreaStatusPortaBuffer, "553", 0, _INT_, REPEAT);
    
    if (Status_tecla_Congela == 3)
    	Update(&radioButtonStatusTeclaCongela0, true);
    
    if (Status_tecla_Congela == 4)
    	Update(&radioButtonStatusTeclaCongela1, true);
    
    Update(&toggleButtonFlagResfriarHardSoft, flag_Resfriar_HARD_SOFT);

}

//Called when the screen transition ends
void ResfriarViewBase::afterTransition()
{
    //ScreenTransitionEnds
    //When screen transition ends execute C++ code
    //Execute C++ code
    if (Status_tecla_Congela != 3 && Status_tecla_Congela != 4)
    	SoundBuzzerOn(25);
}

void ResfriarViewBase::handleTickEvent()
{
    //HandleTickEvent
    //When handleTickEvent is called execute C++ code
    //Execute C++ code
    if ((touchgfx::Unicode::atoi(textAreaStatusPortaBuffer)) == 1){
    	imageStatusPorta.setVisible(true);
    }else{
    	imageStatusPorta.setVisible(false);
    }
    invalidate();
    W_1_4553 = imageStatusPorta.isVisible();
}

void ResfriarViewBase::tearDownScreen()
{
    //TearDownScreen
    //When tearDownScreen is called execute C++ code
    //Execute C++ code
    Clear();
    ClearOthers();
}

void ResfriarViewBase::Resfriar_SONDA()
{
    //ResfriarSONDA
    //When Resfriar_SONDA is called change screen to Resfriar_SONDA
    //Go to Resfriar_SONDA with no screen transition
    application().gotoResfriar_SONDAScreenNoTransition();
}

void ResfriarViewBase::Resfriar_Select_Tempo()
{
    //ResfriarSelectTempo
    //When Resfriar_Select_Tempo is called change screen to Resfriar_Select_Tempo
    //Go to Resfriar_Select_Tempo with no screen transition
    application().gotoResfriar_Select_TempoScreenNoTransition();
}

void ResfriarViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonFlagResfriarSondaTempo)
    {
        //Avancar
        //When buttonFlagResfriarSondaTempo clicked execute C++ code
        //Execute C++ code
        // MODO SONDA
        if (Status_tecla_Congela == 3)
        {
        	if (flag_Resfriar_HARD_SOFT == false) // SE MODO SOFT
        	{
        		UpdateModbus485("242", SP_SONDA_RESF_CAMARA , _INT_);		// SP = RESF MODO SSONDA
        		WriteModbus485("242", 1);
        		Wait(50);
        
        		UpdateModbus485("282", Diferencial_Resfriar_Tempo , _INT_);	// Diferencial rd
        		WriteModbus485("282", 1);
        		Wait(50);
        
        		SP_Resf_Hard_Interno_display = SP_SONDA_RESF_CAMARA;
        		SP_Resf_Hard_Espeto_display = SP_Resfriar_Sonda;
        	}
        	else
        	{
        		Hard_Resf_fase_numero = 1;					// Resfriamento por etapas - Etapa =1		
        		Dif_Resf_Hard_F1 = Diferencial_Resfriar_Tempo;
        		Dif_Resf_Hard_F2 = Dif_Resf_Hard_F1;
        
        		UpdateModbus485("242", SP_Resf_Interno_F1 , _INT_);	// SP X34 = SP_Interno_F1_controle
        		WriteModbus485("242", 1);
        		Wait(50);
        
        		UpdateModbus485("282", Dif_Resf_Hard_F1 , _INT_);	// Diferencial de controle para modo Delicado Sonda
        		WriteModbus485("282", 1);
        		Wait(50);
        
        		SP_Resf_Espeto_F2 = SP_Resfriar_Sonda;
        		SP_Resf_Interno_F2 = SP_SONDA_RESF_CAMARA;	
        	}
        	
        	Timer_Congelar_DECORRIDO_SP = 99999;	// SP Timer- Inf	
        	Timer_Congelar_DECORRIDO_ON = 1;		// START Timer TEmpo_REsfriar_DECORRIDO_ON
        	flag_Processo_ANDAMENTO = 1;		// Flag PRocesso_ANDAMENTO = TRUE
        	Timer_delay_ON = 1;				// Start Timer Delay
        
        	UpdateModbus485("645", 1 , _INT_);		// Controlador em modo COntrole
        	WriteModbus485("645", 1);
        	Wait(50);	
        
        	Resfriar_SONDA();				// Altera para tela de Resfriar SONDA
        }
        
        //  MODO Tempo
        if (Status_tecla_Congela == 4)
        {
        	flag_alarm_receita_vazia = 0;		// zera bit flag alarme de tempo Zero
        	Resfriar_Select_Tempo();			// Tela Resfriar modo Tempo
        }
    }
    else if (&src == &buttonTelaInicial)
    {
        //TelaInicial
        //When buttonTelaInicial clicked change screen to Tela_Inicial
        //Go to Tela_Inicial with no screen transition
        application().gotoTela_InicialScreenNoTransition();
    }
    else if (&src == &toggleButtonFlagResfriarHardSoft)
    {
        //SoftHard
        //When toggleButtonFlagResfriarHardSoft clicked execute C++ code
        //Execute C++ code
        flag_Resfriar_HARD_SOFT = toggleButtonFlagResfriarHardSoft.getState();
        SoundBuzzerOn(25);
    }
}

void ResfriarViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &radioButtonStatusTeclaCongela0)
    {
        //ModoSonda
        //When radioButtonStatusTeclaCongela0 selected execute C++ code
        //Execute C++ code
        Status_tecla_Congela = 3;
        SoundBuzzerOn(25);
    }
    else if (&src == &radioButtonStatusTeclaCongela1)
    {
        //ModoTempo
        //When radioButtonStatusTeclaCongela1 selected execute C++ code
        //Execute C++ code
        Status_tecla_Congela = 4;
        SoundBuzzerOn(25);
    }
}
