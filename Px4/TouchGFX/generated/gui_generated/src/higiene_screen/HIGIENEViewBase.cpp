/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/higiene_screen/HIGIENEViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

HIGIENEViewBase::HIGIENEViewBase() :
    buttonCallback(this, &HIGIENEViewBase::buttonCallbackHandler),
    finalizar_higiene1Cancelar_higieneCallback(this, &HIGIENEViewBase::finalizar_higiene1Cancelar_higieneCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    boxFundo.setPosition(0, 0, 480, 272);
    boxFundo.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));

    boxFundoAzul.setPosition(0, 0, 480, 53);
    boxFundoAzul.setColor(touchgfx::Color::getColorFromRGB(122, 117, 181));

    boxWithBorderBox3.setPosition(66, 65, 324, 57);
    boxWithBorderBox3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorderBox3.setBorderColor(touchgfx::Color::getColorFromRGB(26, 100, 160));
    boxWithBorderBox3.setBorderSize(1);

    textAreaUnidade2.setXY(337, 66);
    textAreaUnidade2.setColor(touchgfx::Color::getColorFromRGB(122, 117, 181));
    textAreaUnidade2.setLinespacing(0);
    textAreaUnidade2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3962));

    textAreaTitle.setXY(5, 8);
    textAreaTitle.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaTitle.setLinespacing(0);
    textAreaTitle.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3965));

    buttonFinalizarHigiene.setXY(406, 64);
    buttonFinalizarHigiene.setBitmaps(touchgfx::Bitmap(BITMAP_VOLTAR_ID), touchgfx::Bitmap(BITMAP_VOLTAR_ID));
    buttonFinalizarHigiene.setAction(buttonCallback);

    image3.setXY(18, 78);
    image3.setBitmap(touchgfx::Bitmap(BITMAP_AMPULHETA_ID));

    textAreaLabel2.setXY(73, 68);
    textAreaLabel2.setColor(touchgfx::Color::getColorFromRGB(122, 117, 181));
    textAreaLabel2.setLinespacing(0);
    textAreaLabel2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3967));

    textAreaTimerHigieneMin.setPosition(172, 66, 121, 56);
    textAreaTimerHigieneMin.setColor(touchgfx::Color::getColorFromRGB(122, 117, 181));
    textAreaTimerHigieneMin.setLinespacing(0);
    Unicode::snprintf(textAreaTimerHigieneMinBuffer, TEXTAREATIMERHIGIENEMIN_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3970).getText());
    textAreaTimerHigieneMin.setWildcard(textAreaTimerHigieneMinBuffer);
    textAreaTimerHigieneMin.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3969));

    textAreaStatusHigiene.setXY(360, 14);
    textAreaStatusHigiene.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaStatusHigiene.setLinespacing(0);
    Unicode::snprintf(textAreaStatusHigieneBuffer, TEXTAREASTATUSHIGIENE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID4181).getText());
    textAreaStatusHigiene.setWildcard(textAreaStatusHigieneBuffer);
    textAreaStatusHigiene.resizeToCurrentText();
    textAreaStatusHigiene.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3973));

    textAreaTimerCongelarDecorridoCount.setPosition(328, 97, 56, 18);
    textAreaTimerCongelarDecorridoCount.setColor(touchgfx::Color::getColorFromRGB(122, 117, 181));
    textAreaTimerCongelarDecorridoCount.setLinespacing(0);
    Unicode::snprintf(textAreaTimerCongelarDecorridoCountBuffer, TEXTAREATIMERCONGELARDECORRIDOCOUNT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3975).getText());
    textAreaTimerCongelarDecorridoCount.setWildcard(textAreaTimerCongelarDecorridoCountBuffer);
    textAreaTimerCongelarDecorridoCount.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3974));

    imageStatusPorta.setXY(200, 0);
    imageStatusPorta.setVisible(false);
    imageStatusPorta.setBitmap(touchgfx::Bitmap(BITMAP_PORTA_ID));

    textAreaStatusPorta.setXY(98, 13);
    textAreaStatusPorta.setVisible(false);
    textAreaStatusPorta.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaStatusPorta.setLinespacing(0);
    Unicode::snprintf(textAreaStatusPortaBuffer, TEXTAREASTATUSPORTA_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID4162).getText());
    textAreaStatusPorta.setWildcard(textAreaStatusPortaBuffer);
    textAreaStatusPorta.resizeToCurrentText();
    textAreaStatusPorta.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4161));

    finalizar_higiene1.setXY(0, 0);
    finalizar_higiene1.setVisible(false);
    finalizar_higiene1.setCancelar_higieneCallback(finalizar_higiene1Cancelar_higieneCallback);

    add(__background);
    add(boxFundo);
    add(boxFundoAzul);
    add(boxWithBorderBox3);
    add(textAreaUnidade2);
    add(textAreaTitle);
    add(buttonFinalizarHigiene);
    add(image3);
    add(textAreaLabel2);
    add(textAreaTimerHigieneMin);
    add(textAreaStatusHigiene);
    add(textAreaTimerCongelarDecorridoCount);
    add(imageStatusPorta);
    add(textAreaStatusPorta);
    add(finalizar_higiene1);
}

void HIGIENEViewBase::setupScreen()
{
    finalizar_higiene1.initialize();
    //ScreenTransitionBegins
    //When screen transition begins execute C++ code
    //Execute C++ code
    
    
    AddbackgroundContainer(this); 
    
    W_HDW5000 = 45;
    
    Clear();
    
    ReadWriteModbus485(&textAreaStatusPorta, textAreaStatusPortaBuffer, "553", 0, _INT_, REPEAT);
    
    UpdateModbus485("10242", 999, _INT_);
    WriteModbus485("10242", 1);
    
    UpdateModbus485("645", 1, _INT_);
    WriteModbus485("645", 1);
    
    UpdateModbus485("10322", 11, _INT_);
    WriteModbus485("10322", 1);
    
    timer_higiene_ON = true;
    
    status_higiene = true;
    
    Update(&textAreaStatusHigiene, textAreaStatusHigieneBuffer, "OPERANDO...", 20);

}

//Called when the screen transition ends
void HIGIENEViewBase::afterTransition()
{
    //ScreenTransitionEnds
    //When screen transition ends execute C++ code
    //Execute C++ code
    SoundBuzzerOn(25);
}

void HIGIENEViewBase::finalizar_higiene1Cancelar_higieneCallbackHandler()
{
    //cancelar_higiene
    //When finalizar_higiene1 cancelar_higiene execute C++ code
    //Execute C++ code
    Clear();
    SoundBuzzerOn(25);
    
    UpdateModbus485("10242", 999, _INT_); 
    WriteModbus485("10242", 2);
    
    UpdateModbus485("645", 0, _INT_);
    WriteModbus485("645", 1);
    
    UpdateModbus485("10322", 3, _INT_);
    WriteModbus485("10322", 1);
    
    status_higiene = false;
    
    Timer_higiene_MIN = 0;
    Timer_higiene_COUNT = 0;
}

void HIGIENEViewBase::handleTickEvent()
{
    //HandleTickEvent
    //When handleTickEvent is called execute C++ code
    //Execute C++ code
    if ((touchgfx::Unicode::atoi(textAreaStatusPortaBuffer)) == 1){
    	imageStatusPorta.setVisible(true);
    }else{
    	imageStatusPorta.setVisible(false);
    }
    invalidate();
    
    W_1_4553 = imageStatusPorta.isVisible();
    
    Update(&textAreaTimerHigieneMin, textAreaTimerHigieneMinBuffer, Timer_higiene_MIN, _INT_, 0);
    Update(&textAreaTimerCongelarDecorridoCount, textAreaTimerCongelarDecorridoCountBuffer, Timer_higiene_COUNT, _INT_, 0);
    
    if (countCycleBlink > 1000)
    {
    	countCycleBlink = 0;
    	
    	if (status_higiene)
    		VisibilityTextArea(&textAreaStatusHigiene, textAreaStatusHigiene.isVisible());
    	else
    		Update(&textAreaStatusHigiene, textAreaStatusHigieneBuffer, "Finalizado!", 20);
    }
    countCycleBlink += 16;
}

void HIGIENEViewBase::tearDownScreen()
{
    //TearDownScreen
    //When tearDownScreen is called execute C++ code
    //Execute C++ code
    Clear();
    ClearOthers();
}

void HIGIENEViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonFinalizarHigiene)
    {
        //HigieneConfirma
        //When buttonFinalizarHigiene clicked execute C++ code
        //Execute C++ code
        ContainerVisibility(&finalizar_higiene1, true);
        SoundBuzzerOn(25);
    }
}
