/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/configuracao_screen/ConfiguracaoViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

ConfiguracaoViewBase::ConfiguracaoViewBase() :
    buttonCallback(this, &ConfiguracaoViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &ConfiguracaoViewBase::flexButtonCallbackHandler),
    numKeyboardContainer1OutOfRangeCallback(this, &ConfiguracaoViewBase::numKeyboardContainer1OutOfRangeCallbackHandler),
    numKeyboardContainer1ValidRangeCallback(this, &ConfiguracaoViewBase::numKeyboardContainer1ValidRangeCallbackHandler),
    numKeyboardContainer1HideKeypadTriggerCallback(this, &ConfiguracaoViewBase::numKeyboardContainer1HideKeypadTriggerCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    boxFundo.setPosition(0, 0, 480, 272);
    boxFundo.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));

    boxAzul4.setPosition(26, 159, 78, 29);
    boxAzul4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 255));

    boxAzul3.setPosition(26, 120, 78, 29);
    boxAzul3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 255));

    boxAzul2.setPosition(26, 81, 78, 29);
    boxAzul2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 255));

    boxAzul.setPosition(26, 41, 78, 29);
    boxAzul.setColor(touchgfx::Color::getColorFromRGB(0, 0, 255));

    textAreaLabel1.setXY(111, 41);
    textAreaLabel1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 255));
    textAreaLabel1.setLinespacing(0);
    textAreaLabel1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3679));

    textAreaLabel2.setXY(111, 81);
    textAreaLabel2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 255));
    textAreaLabel2.setLinespacing(0);
    textAreaLabel2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3682));

    textAreaLabel3.setXY(111, 120);
    textAreaLabel3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 255));
    textAreaLabel3.setLinespacing(0);
    textAreaLabel3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3685));

    textAreaLabel4.setXY(111, 159);
    textAreaLabel4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 255));
    textAreaLabel4.setLinespacing(0);
    textAreaLabel4.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3688));

    textAreaLabel5.setXY(354, 201);
    textAreaLabel5.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    textAreaLabel5.setLinespacing(0);
    textAreaLabel5.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3689));

    buttonTelaInicial.setXY(433, 220);
    buttonTelaInicial.setBitmaps(touchgfx::Bitmap(BITMAP_VOLTAR3_ID), touchgfx::Bitmap(BITMAP_VOLTAR3_ID));
    buttonTelaInicial.setAction(buttonCallback);

    buttonConfiguracao2.setXY(443, 102);
    buttonConfiguracao2.setBitmaps(touchgfx::Bitmap(BITMAP_AVANCE2_ID), touchgfx::Bitmap(BITMAP_AVANCE2_ID));
    buttonConfiguracao2.setAction(buttonCallback);

    buttonResetFabrica.setXY(356, 226);
    buttonResetFabrica.setBitmaps(touchgfx::Bitmap(BITMAP_RESET_ID), touchgfx::Bitmap(BITMAP_RESET_ID));
    buttonResetFabrica.setAction(buttonCallback);

    textAreaDiferencialCongelarTempo.setPosition(26, 159, 78, 29);
    textAreaDiferencialCongelarTempo.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaDiferencialCongelarTempo.setLinespacing(0);
    Unicode::snprintf(textAreaDiferencialCongelarTempoBuffer, TEXTAREADIFERENCIALCONGELARTEMPO_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3687).getText());
    textAreaDiferencialCongelarTempo.setWildcard(textAreaDiferencialCongelarTempoBuffer);
    textAreaDiferencialCongelarTempo.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3686));

    textAreaSpCongelarTempo.setPosition(26, 120, 78, 29);
    textAreaSpCongelarTempo.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaSpCongelarTempo.setLinespacing(0);
    Unicode::snprintf(textAreaSpCongelarTempoBuffer, TEXTAREASPCONGELARTEMPO_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3684).getText());
    textAreaSpCongelarTempo.setWildcard(textAreaSpCongelarTempoBuffer);
    textAreaSpCongelarTempo.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3683));

    textAreaSpSondaCongelarCamara.setPosition(26, 81, 78, 29);
    textAreaSpSondaCongelarCamara.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaSpSondaCongelarCamara.setLinespacing(0);
    Unicode::snprintf(textAreaSpSondaCongelarCamaraBuffer, TEXTAREASPSONDACONGELARCAMARA_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3681).getText());
    textAreaSpSondaCongelarCamara.setWildcard(textAreaSpSondaCongelarCamaraBuffer);
    textAreaSpSondaCongelarCamara.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3680));

    textAreaCongelarSondaSp.setPosition(26, 41, 78, 29);
    textAreaCongelarSondaSp.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaCongelarSondaSp.setLinespacing(0);
    Unicode::snprintf(textAreaCongelarSondaSpBuffer, TEXTAREACONGELARSONDASP_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3678).getText());
    textAreaCongelarSondaSp.setWildcard(textAreaCongelarSondaSpBuffer);
    textAreaCongelarSondaSp.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3677));

    flexButtonDiferencialCongelarTempo.setBoxWithBorderPosition(0, 0, 78, 28);
    flexButtonDiferencialCongelarTempo.setBorderSize(5);
    flexButtonDiferencialCongelarTempo.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonDiferencialCongelarTempo.setPosition(26, 160, 78, 28);
    flexButtonDiferencialCongelarTempo.setAlpha(0);
    flexButtonDiferencialCongelarTempo.setAction(flexButtonCallback);

    flexButtonSpCongelarTempo.setBoxWithBorderPosition(0, 0, 78, 29);
    flexButtonSpCongelarTempo.setBorderSize(5);
    flexButtonSpCongelarTempo.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonSpCongelarTempo.setPosition(26, 120, 78, 29);
    flexButtonSpCongelarTempo.setAlpha(0);
    flexButtonSpCongelarTempo.setAction(flexButtonCallback);

    flexButtonSpSondaCongelarCamara.setBoxWithBorderPosition(0, 0, 78, 28);
    flexButtonSpSondaCongelarCamara.setBorderSize(5);
    flexButtonSpSondaCongelarCamara.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonSpSondaCongelarCamara.setPosition(26, 82, 78, 28);
    flexButtonSpSondaCongelarCamara.setAlpha(0);
    flexButtonSpSondaCongelarCamara.setAction(flexButtonCallback);

    flexButtonCongelarSondaSp.setBoxWithBorderPosition(0, 0, 78, 29);
    flexButtonCongelarSondaSp.setBorderSize(5);
    flexButtonCongelarSondaSp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonCongelarSondaSp.setPosition(26, 41, 78, 29);
    flexButtonCongelarSondaSp.setAlpha(0);
    flexButtonCongelarSondaSp.setAction(flexButtonCallback);

    numKeyboardContainer1.setXY(0, 0);
    numKeyboardContainer1.setVisible(false);
    numKeyboardContainer1.setOutOfRangeCallback(numKeyboardContainer1OutOfRangeCallback);
    numKeyboardContainer1.setValidRangeCallback(numKeyboardContainer1ValidRangeCallback);
    numKeyboardContainer1.setHideKeypadTriggerCallback(numKeyboardContainer1HideKeypadTriggerCallback);

    imageStatusPorta.setXY(200, 0);
    imageStatusPorta.setVisible(false);
    imageStatusPorta.setBitmap(touchgfx::Bitmap(BITMAP_PORTA_ID));

    textAreaStatusPorta.setXY(98, 13);
    textAreaStatusPorta.setVisible(false);
    textAreaStatusPorta.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaStatusPorta.setLinespacing(0);
    Unicode::snprintf(textAreaStatusPortaBuffer, TEXTAREASTATUSPORTA_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID4114).getText());
    textAreaStatusPorta.setWildcard(textAreaStatusPortaBuffer);
    textAreaStatusPorta.resizeToCurrentText();
    textAreaStatusPorta.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4113));

    add(__background);
    add(boxFundo);
    add(boxAzul4);
    add(boxAzul3);
    add(boxAzul2);
    add(boxAzul);
    add(textAreaLabel1);
    add(textAreaLabel2);
    add(textAreaLabel3);
    add(textAreaLabel4);
    add(textAreaLabel5);
    add(buttonTelaInicial);
    add(buttonConfiguracao2);
    add(buttonResetFabrica);
    add(textAreaDiferencialCongelarTempo);
    add(textAreaSpCongelarTempo);
    add(textAreaSpSondaCongelarCamara);
    add(textAreaCongelarSondaSp);
    add(flexButtonDiferencialCongelarTempo);
    add(flexButtonSpCongelarTempo);
    add(flexButtonSpSondaCongelarCamara);
    add(flexButtonCongelarSondaSp);
    add(numKeyboardContainer1);
    add(imageStatusPorta);
    add(textAreaStatusPorta);
}

void ConfiguracaoViewBase::setupScreen()
{
    numKeyboardContainer1.initialize();
    //ScreenTransitionBegins
    //When screen transition begins execute C++ code
    //Execute C++ code
    Clear();
    
    ReadWriteModbus485(&textAreaStatusPorta, textAreaStatusPortaBuffer, "553", 0, _INT_, REPEAT);
    
    Update(&textAreaCongelarSondaSp, textAreaCongelarSondaSpBuffer, CONGELAR_SONDA_SP / 10, _FP_32BIT_, 1);
    Update(&textAreaSpSondaCongelarCamara, textAreaSpSondaCongelarCamaraBuffer, SP_SONDA_CONGELAR_CAMARA / 10, _FP_32BIT_, 1);
    Update(&textAreaSpCongelarTempo, textAreaSpCongelarTempoBuffer, SP_Congelar_Tempo / 10, _FP_32BIT_, 1);
    Update(&textAreaDiferencialCongelarTempo, textAreaDiferencialCongelarTempoBuffer, Diferencial_Congelar_tempo / 10, _FP_32BIT_, 1);

}

//Called when the screen transition ends
void ConfiguracaoViewBase::afterTransition()
{
    //ScreenTransitionEnds
    //When screen transition ends execute C++ code
    //Execute C++ code
    //SoundBuzzerOn(25);
    ContainerVisibility(&numKeyboardContainer1, false);
}

void ConfiguracaoViewBase::numKeyboardContainer1OutOfRangeCallbackHandler()
{
    //OutOfRangeFIred
    //When numKeyboardContainer1 OutOfRange call OutOfRangeMsg on numKeyboardContainer1
    //Call OutOfRangeMsg
    numKeyboardContainer1.OutOfRangeMsg();
}

void ConfiguracaoViewBase::numKeyboardContainer1ValidRangeCallbackHandler()
{
    //InsideRangeFired
    //When numKeyboardContainer1 ValidRange call InputValidRange on numKeyboardContainer1
    //Call InputValidRange
    numKeyboardContainer1.InputValidRange();
}

void ConfiguracaoViewBase::numKeyboardContainer1HideKeypadTriggerCallbackHandler()
{
    //HideNumKeyboard
    //When numKeyboardContainer1 HideKeypadTrigger execute C++ code
    //Execute C++ code
    ContainerVisibility(&numKeyboardContainer1, false);
    SoundBuzzerOn(25);
}

void ConfiguracaoViewBase::handleTickEvent()
{
    //HandleTickEvent
    //When handleTickEvent is called execute C++ code
    //Execute C++ code
    if ((touchgfx::Unicode::atoi(textAreaStatusPortaBuffer)) == 1){
    	imageStatusPorta.setVisible(true);
    }else{
    	imageStatusPorta.setVisible(false);
    }
    invalidate();
}

void ConfiguracaoViewBase::tearDownScreen()
{
    //TearDownScreen
    //When tearDownScreen is called execute C++ code
    //Execute C++ code
    CONGELAR_SONDA_SP = 10 * GetNumberTextArea(textAreaCongelarSondaSpBuffer);
    SP_SONDA_CONGELAR_CAMARA = 10 * GetNumberTextArea(textAreaSpSondaCongelarCamaraBuffer);
    SP_Congelar_Tempo = 10 * GetNumberTextArea(textAreaSpCongelarTempoBuffer);
    Diferencial_Congelar_tempo = 10 * GetNumberTextArea(textAreaDiferencialCongelarTempoBuffer);
    
    Clear();
    ContainerClear(&numKeyboardContainer1);
}

void ConfiguracaoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonTelaInicial)
    {
        //TelaInicial
        //When buttonTelaInicial clicked change screen to Tela_Inicial
        //Go to Tela_Inicial with no screen transition
        application().gotoTela_InicialScreenNoTransition();
    }
    else if (&src == &buttonConfiguracao2)
    {
        //Configuracao2
        //When buttonConfiguracao2 clicked change screen to Configuracao_2
        //Go to Configuracao_2 with no screen transition
        application().gotoConfiguracao_2ScreenNoTransition();
    }
    else if (&src == &buttonResetFabrica)
    {
        //ResetFabrica
        //When buttonResetFabrica clicked change screen to RESET_FABRICA
        //Go to RESET_FABRICA with no screen transition
        application().gotoRESET_FABRICAScreenNoTransition();
    }
}

void ConfiguracaoViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonDiferencialCongelarTempo)
    {
        //DiferencialCongelarTempo
        //When flexButtonDiferencialCongelarTempo clicked execute C++ code
        //Execute C++ code
        AddNumKeyboardReference(&textAreaDiferencialCongelarTempo, textAreaDiferencialCongelarTempoBuffer, -3276.8, 3276.7, _FP_32BIT_, 1, 0);
        ContainerVisibility(&numKeyboardContainer1, true);
        SoundBuzzerOn(25);

        //LaunchDiferencialCongelarTempoKeyboard
        //When DiferencialCongelarTempo completed call LaunchNumericalKeyboard on numKeyboardContainer1
        //Call LaunchNumericalKeyboard
        numKeyboardContainer1.LaunchNumericalKeyboard();
    }
    else if (&src == &flexButtonSpCongelarTempo)
    {
        //SpCongelarTempo
        //When flexButtonSpCongelarTempo clicked execute C++ code
        //Execute C++ code
        AddNumKeyboardReference(&textAreaSpCongelarTempo, textAreaSpCongelarTempoBuffer, -3276.8, 3276.7, _FP_32BIT_, 1, 0);
        ContainerVisibility(&numKeyboardContainer1, true);
        SoundBuzzerOn(25);

        //LaunchSpCongelarTempoKeyboard
        //When SpCongelarTempo completed call LaunchNumericalKeyboard on numKeyboardContainer1
        //Call LaunchNumericalKeyboard
        numKeyboardContainer1.LaunchNumericalKeyboard();
    }
    else if (&src == &flexButtonSpSondaCongelarCamara)
    {
        //SpSondaCongelarCamara
        //When flexButtonSpSondaCongelarCamara clicked execute C++ code
        //Execute C++ code
        AddNumKeyboardReference(&textAreaSpSondaCongelarCamara, textAreaSpSondaCongelarCamaraBuffer, -99.9, 99.9, _FP_32BIT_, 1, 0);
        ContainerVisibility(&numKeyboardContainer1, true);
        SoundBuzzerOn(25);

        //LaunchSpSondaCongelarCamaraKeyboard
        //When SpSondaCongelarCamara completed call LaunchNumericalKeyboard on numKeyboardContainer1
        //Call LaunchNumericalKeyboard
        numKeyboardContainer1.LaunchNumericalKeyboard();
    }
    else if (&src == &flexButtonCongelarSondaSp)
    {
        //CongelarSondaSp
        //When flexButtonCongelarSondaSp clicked execute C++ code
        //Execute C++ code
        AddNumKeyboardReference(&textAreaCongelarSondaSp, textAreaCongelarSondaSpBuffer, -3276.8, 3276.7, _FP_32BIT_, 1, 0);
        ContainerVisibility(&numKeyboardContainer1, true);
        SoundBuzzerOn(25);

        //LaunchCongelarSondaSpKeyboard
        //When CongelarSondaSp completed call LaunchNumericalKeyboard on numKeyboardContainer1
        //Call LaunchNumericalKeyboard
        numKeyboardContainer1.LaunchNumericalKeyboard();
    }
}
