/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/congelar_screen/CongelarViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

CongelarViewBase::CongelarViewBase() :
    buttonCallback(this, &CongelarViewBase::buttonCallbackHandler),
    radioButtonSelectedCallback(this, &CongelarViewBase::radioButtonSelectedCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    boxFundo.setPosition(0, 0, 480, 272);
    boxFundo.setColor(touchgfx::Color::getColorFromRGB(240, 240, 240));

    boxFundoAzul.setPosition(0, 0, 480, 53);
    boxFundoAzul.setColor(touchgfx::Color::getColorFromRGB(26, 100, 160));

    textAreaTitle.setXY(5, 8);
    textAreaTitle.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaTitle.setLinespacing(0);
    textAreaTitle.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3632));

    radioButtonStatusTeclaCongela0.setXY(14, 64);
    radioButtonStatusTeclaCongela0.setBitmaps(touchgfx::Bitmap(BITMAP_MSONDAOFF_ID), touchgfx::Bitmap(BITMAP_MSONDAON_ID), touchgfx::Bitmap(BITMAP_MSONDAON_ID), touchgfx::Bitmap(BITMAP_MSONDAON_ID));
    radioButtonStatusTeclaCongela0.setSelected(false);
    radioButtonStatusTeclaCongela0.setDeselectionEnabled(false);

    radioButtonStatusTeclaCongela1.setXY(140, 64);
    radioButtonStatusTeclaCongela1.setBitmaps(touchgfx::Bitmap(BITMAP_MCONGTEMPOOFF_ID), touchgfx::Bitmap(BITMAP_MCONGTEMPOON_ID), touchgfx::Bitmap(BITMAP_MCONGTEMPOON_ID), touchgfx::Bitmap(BITMAP_MCONGTEMPOON_ID));
    radioButtonStatusTeclaCongela1.setSelected(false);
    radioButtonStatusTeclaCongela1.setDeselectionEnabled(false);

    buttonFlagCongelarSonda.setXY(406, 208);
    buttonFlagCongelarSonda.setBitmaps(touchgfx::Bitmap(BITMAP_AVANCE_ID), touchgfx::Bitmap(BITMAP_AVANCEON_ID));
    buttonFlagCongelarSonda.setAction(buttonCallback);

    buttonTelaInicial.setXY(406, 64);
    buttonTelaInicial.setBitmaps(touchgfx::Bitmap(BITMAP_VOLTAR_ID), touchgfx::Bitmap(BITMAP_VOLTAR_ID));
    buttonTelaInicial.setAction(buttonCallback);

    imageStatusPorta.setXY(200, 0);
    imageStatusPorta.setVisible(false);
    imageStatusPorta.setBitmap(touchgfx::Bitmap(BITMAP_PORTA_ID));

    textAreaStatusPorta.setXY(98, 13);
    textAreaStatusPorta.setVisible(false);
    textAreaStatusPorta.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaStatusPorta.setLinespacing(0);
    Unicode::snprintf(textAreaStatusPortaBuffer, TEXTAREASTATUSPORTA_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID4106).getText());
    textAreaStatusPorta.setWildcard(textAreaStatusPortaBuffer);
    textAreaStatusPorta.resizeToCurrentText();
    textAreaStatusPorta.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4105));

    add(__background);
    add(boxFundo);
    add(boxFundoAzul);
    add(textAreaTitle);
    add(radioButtonStatusTeclaCongela0);
    add(radioButtonStatusTeclaCongela1);
    add(buttonFlagCongelarSonda);
    add(buttonTelaInicial);
    add(imageStatusPorta);
    add(textAreaStatusPorta);
    radioButtonGroup1.add(radioButtonStatusTeclaCongela0);
    radioButtonGroup1.add(radioButtonStatusTeclaCongela1);
    radioButtonGroup1.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
}

void CongelarViewBase::setupScreen()
{

    //ScreenTransitionBegins
    //When screen transition begins execute C++ code
    //Execute C++ code
    W_HDW5000 = 1;
    
    Clear();
    
    ReadWriteModbus485(&textAreaStatusPorta, textAreaStatusPortaBuffer, "553", 0, _INT_, REPEAT);

}

//Called when the screen transition ends
void CongelarViewBase::afterTransition()
{
    //ScreenTransitionEnds
    //When screen transition ends execute C++ code
    //Execute C++ code
    SoundBuzzerOn(25);
}

void CongelarViewBase::handleTickEvent()
{
    //HandleTickEvent
    //When handleTickEvent is called execute C++ code
    //Execute C++ code
    
    if ((touchgfx::Unicode::atoi(textAreaStatusPortaBuffer)) == 1){
    	imageStatusPorta.setVisible(true);
    }else{
    	imageStatusPorta.setVisible(false);
    }
    invalidate();
    W_1_4553 = imageStatusPorta.isVisible();
}

void CongelarViewBase::tearDownScreen()
{
    //TearDownScreen
    //When tearDownScreen is called execute C++ code
    //Execute C++ code
    Clear();
    ClearOthers();
}

void CongelarViewBase::goToCongelarSonda()
{
    //interactionGoToCongelarSonda
    //When goToCongelarSonda is called change screen to Congelar_SONDA
    //Go to Congelar_SONDA with no screen transition
    application().gotoCongelar_SONDAScreenNoTransition();
}

void CongelarViewBase::goToCongelarSelectTempo()
{
    //interactionGoToCongelarSelectTempo
    //When goToCongelarSelectTempo is called change screen to Congelar_select_TEMPO
    //Go to Congelar_select_TEMPO with no screen transition
    application().gotoCongelar_select_TEMPOScreenNoTransition();
}

void CongelarViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonFlagCongelarSonda)
    {
        //Avancar
        //When buttonFlagCongelarSonda clicked execute C++ code
        //Execute C++ code
        // MODO SONDA
        
        if (Status_tecla_Congela) { // if tela de Congelar SONDA
        
        
        
            UpdateModbus485( MA_SP_SONDA_CONGELAR_CAMARA, SP_SONDA_CONGELAR_CAMARA, _INT2_);    //W_1_410242 = SP_SONDA_CONGELAR_CAMARA; // SP = SP_SONDA_CONGELAR_CAMARA
            WriteModbus485(MA_SP_SONDA_CONGELAR_CAMARA, 1);
            Wait(50);
        
            UpdateModbus485( MA_Diferencial_Congelar_tempo, Diferencial_Congelar_tempo, _INT2_);    //W_1_410282 = Diferencial_Congelar_tempo; // Diferencial rd=3ÂºC
            WriteModbus485(MA_Diferencial_Congelar_tempo, 1);
            Wait(50);
            //W_1_4645 = 1;                // Controlador em modo Controle
        
            Timer_Congelar_DECORRIDO_SP = 99999; // SP Timer- Inf
        
            Timer_Congelar_DECORRIDO_ON = 1; // START Timer Tempo_Congelar_DECORRIDO_ON
            flag_Processo_ANDAMENTO = 1;     // Flag Processo_ANDAMENTO = TRUE
        
            Timer_delay_ON = true;          // Start Timer Delay
        
            // trocar a tela para a tela de Congelar SONDA
            //W_HDW5000 = 2;               // Altera para tela de SONDA 
            goToCongelarSonda();
        
        } else { // tela de Congelar SELECT TEMPO
            flag_alarm_receita_vazia = false; // zera bit flag alarme de tempo Zero
            // trocar a tela para a tela de Congelar SELECT TEMPO
            //W_HDW5000 = 4;               // Tela Select Tempo
            goToCongelarSelectTempo();
        }
    }
    else if (&src == &buttonTelaInicial)
    {
        //TelaInicial
        //When buttonTelaInicial clicked change screen to Tela_Inicial
        //Go to Tela_Inicial with no screen transition
        application().gotoTela_InicialScreenNoTransition();
    }
}

void CongelarViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &radioButtonStatusTeclaCongela0)
    {
        //ModoSonda
        //When radioButtonStatusTeclaCongela0 selected execute C++ code
        //Execute C++ code
        SoundBuzzerOn(25);
        Status_tecla_Congela = true;
    }
    else if (&src == &radioButtonStatusTeclaCongela1)
    {
        //ModoTempo
        //When radioButtonStatusTeclaCongela1 selected execute C++ code
        //Execute C++ code
        SoundBuzzerOn(25);
        Status_tecla_Congela = false;
    }
}
